# NOTES

## Query Simplification
- Update documentation.
  - Regenerate example queries and update query text shown in documentation.
  - Table alias placeholder should be documented to only refer to the main table where that makes sense.



Sqlite support (WIP)
  Use functions json_object(), json_group_array().

## Dev workflow

Build and run tests:

```sh
npm run build
npm run start-test-dbs
npm test
```

Tag a release:

```
git tag n<x>.<y>.<z>
# e.g. git tag n1.8.2
git push gh --tags
```

## Managing Dependency Versions

Show latest dependency versions in `package.json`:

```
npx npm-check-updates
```

Add "-u" to write latest versions into `package.json`.

## TODO

- Add build step to flake.

- Make a new Deno branch based on main?
  See how much this simplifies usage.
  But dbmd generation would still probably best be done via a Maven project.
    But to get started users could just run the dbmd query manually.

- Order-by is not handled properly on queries, requires ordering by exported columns and without
  table alias (which would have to be 'q').



SQL Keywords Master List
------------------------
select  A from (values(0)) q(A);
select  ABORT from (values(0)) q(ABORT);
select  ABS from (values(0)) q(ABS);
select  ABSOLUTE from (values(0)) q(ABSOLUTE);
select  ACCESS from (values(0)) q(ACCESS);
select  ACTION from (values(0)) q(ACTION);
select  ADA from (values(0)) q(ADA);
select  ADD from (values(0)) q(ADD);
select  ADMIN from (values(0)) q(ADMIN);
select  AFTER from (values(0)) q(AFTER);
select  AGGREGATE from (values(0)) q(AGGREGATE);
select  ALIAS from (values(0)) q(ALIAS);
select  ALL from (values(0)) q(ALL);
select  ALLOCATE from (values(0)) q(ALLOCATE);
select  ALSO from (values(0)) q(ALSO);
select  ALTER from (values(0)) q(ALTER);
select  ALWAYS from (values(0)) q(ALWAYS);
select  ANALYZE from (values(0)) q(ANALYZE);
select  AND from (values(0)) q(AND);
select  ANY from (values(0)) q(ANY);
select  ARE from (values(0)) q(ARE);
select  ARRAY from (values(0)) q(ARRAY);
select  AS from (values(0)) q(AS);
select  ASC from (values(0)) q(ASC);
select  ASENSITIVE from (values(0)) q(ASENSITIVE);
select  ASSERTION from (values(0)) q(ASSERTION);
select  ASSIGNMENT from (values(0)) q(ASSIGNMENT);
select  ASYMMETRIC from (values(0)) q(ASYMMETRIC);
select  AT from (values(0)) q(AT);
select  ATOMIC from (values(0)) q(ATOMIC);
select  ATTRIBUTE from (values(0)) q(ATTRIBUTE);
select  ATTRIBUTES from (values(0)) q(ATTRIBUTES);
select  AUDIT from (values(0)) q(AUDIT);
select  AUTHORIZATION from (values(0)) q(AUTHORIZATION);
select  AUTO_INCREMENT from (values(0)) q(AUTO_INCREMENT);
select  AVG from (values(0)) q(AVG);
select  AVG_ROW_LENGTH from (values(0)) q(AVG_ROW_LENGTH);
select  BACKUP from (values(0)) q(BACKUP);
select  BACKWARD from (values(0)) q(BACKWARD);
select  BEFORE from (values(0)) q(BEFORE);
select  BEGIN from (values(0)) q(BEGIN);
select  BERNOULLI from (values(0)) q(BERNOULLI);
select  BETWEEN from (values(0)) q(BETWEEN);
select  BIGINT from (values(0)) q(BIGINT);
select  BINARY from (values(0)) q(BINARY);
select  BIT from (values(0)) q(BIT);
select  BIT_LENGTH from (values(0)) q(BIT_LENGTH);
select  BITVAR from (values(0)) q(BITVAR);
select  BLOB from (values(0)) q(BLOB);
select  BOOL from (values(0)) q(BOOL);
select  BOOLEAN from (values(0)) q(BOOLEAN);
select  BOTH from (values(0)) q(BOTH);
select  BREADTH from (values(0)) q(BREADTH);
select  BREAK from (values(0)) q(BREAK);
select  BROWSE from (values(0)) q(BROWSE);
select  BULK from (values(0)) q(BULK);
select  BY from (values(0)) q(BY);
select  C from (values(0)) q(C);
select  CACHE from (values(0)) q(CACHE);
select  CALL from (values(0)) q(CALL);
select  CALLED from (values(0)) q(CALLED);
select  CARDINALITY from (values(0)) q(CARDINALITY);
select  CASCADE from (values(0)) q(CASCADE);
select  CASCADED from (values(0)) q(CASCADED);
select  CASE from (values(0)) q(CASE);
select  CAST from (values(0)) q(CAST);
select  CATALOG from (values(0)) q(CATALOG);
select  CATALOG_NAME from (values(0)) q(CATALOG_NAME);
select  CEIL from (values(0)) q(CEIL);
select  CEILING from (values(0)) q(CEILING);
select  CHAIN from (values(0)) q(CHAIN);
select  CHANGE from (values(0)) q(CHANGE);
select  CHAR from (values(0)) q(CHAR);
select  CHAR_LENGTH from (values(0)) q(CHAR_LENGTH);
select  CHARACTER from (values(0)) q(CHARACTER);
select  CHARACTER_LENGTH from (values(0)) q(CHARACTER_LENGTH);
select  CHARACTER_SET_CATALOG from (values(0)) q(CHARACTER_SET_CATALOG);
select  CHARACTER_SET_NAME from (values(0)) q(CHARACTER_SET_NAME);
select  CHARACTER_SET_SCHEMA from (values(0)) q(CHARACTER_SET_SCHEMA);
select  CHARACTERISTICS from (values(0)) q(CHARACTERISTICS);
select  CHARACTERS from (values(0)) q(CHARACTERS);
select  CHECK from (values(0)) q(CHECK);
select  CHECKED from (values(0)) q(CHECKED);
select  CHECKPOINT from (values(0)) q(CHECKPOINT);
select  CHECKSUM from (values(0)) q(CHECKSUM);
select  CLASS from (values(0)) q(CLASS);
select  CLASS_ORIGIN from (values(0)) q(CLASS_ORIGIN);
select  CLOB from (values(0)) q(CLOB);
select  CLOSE from (values(0)) q(CLOSE);
select  CLUSTER from (values(0)) q(CLUSTER);
select  CLUSTERED from (values(0)) q(CLUSTERED);
select  COALESCE from (values(0)) q(COALESCE);
select  COBOL from (values(0)) q(COBOL);
select  COLLATE from (values(0)) q(COLLATE);
select  COLLATION from (values(0)) q(COLLATION);
select  COLLATION_CATALOG from (values(0)) q(COLLATION_CATALOG);
select  COLLATION_NAME from (values(0)) q(COLLATION_NAME);
select  COLLATION_SCHEMA from (values(0)) q(COLLATION_SCHEMA);
select  COLLECT from (values(0)) q(COLLECT);
select  COLUMN from (values(0)) q(COLUMN);
select  COLUMN_NAME from (values(0)) q(COLUMN_NAME);
select  COLUMNS from (values(0)) q(COLUMNS);
select  COMMAND_FUNCTION from (values(0)) q(COMMAND_FUNCTION);
select  COMMAND_FUNCTION_CODE from (values(0)) q(COMMAND_FUNCTION_CODE);
select  COMMENT from (values(0)) q(COMMENT);
select  COMMIT from (values(0)) q(COMMIT);
select  COMMITTED from (values(0)) q(COMMITTED);
select  COMPLETION from (values(0)) q(COMPLETION);
select  COMPRESS from (values(0)) q(COMPRESS);
select  COMPUTE from (values(0)) q(COMPUTE);
select  CONDITION from (values(0)) q(CONDITION);
select  CONDITION_NUMBER from (values(0)) q(CONDITION_NUMBER);
select  CONNECT from (values(0)) q(CONNECT);
select  CONNECTION from (values(0)) q(CONNECTION);
select  CONNECTION_NAME from (values(0)) q(CONNECTION_NAME);
select  CONSTRAINT from (values(0)) q(CONSTRAINT);
select  CONSTRAINT_CATALOG from (values(0)) q(CONSTRAINT_CATALOG);
select  CONSTRAINT_NAME from (values(0)) q(CONSTRAINT_NAME);
select  CONSTRAINT_SCHEMA from (values(0)) q(CONSTRAINT_SCHEMA);
select  CONSTRAINTS from (values(0)) q(CONSTRAINTS);
select  CONSTRUCTOR from (values(0)) q(CONSTRUCTOR);
select  CONTAINS from (values(0)) q(CONTAINS);
select  CONTAINSTABLE from (values(0)) q(CONTAINSTABLE);
select  CONTINUE from (values(0)) q(CONTINUE);
select  CONVERSION from (values(0)) q(CONVERSION);
select  CONVERT from (values(0)) q(CONVERT);
select  COPY from (values(0)) q(COPY);
select  CORR from (values(0)) q(CORR);
select  CORRESPONDING from (values(0)) q(CORRESPONDING);
select  COUNT from (values(0)) q(COUNT);
select  COVAR_POP from (values(0)) q(COVAR_POP);
select  COVAR_SAMP from (values(0)) q(COVAR_SAMP);
select  CREATE from (values(0)) q(CREATE);
select  CREATEDB from (values(0)) q(CREATEDB);
select  CREATEROLE from (values(0)) q(CREATEROLE);
select  CREATEUSER from (values(0)) q(CREATEUSER);
select  CROSS from (values(0)) q(CROSS);
select  CSV from (values(0)) q(CSV);
select  CUBE from (values(0)) q(CUBE);
select  CUME_DIST from (values(0)) q(CUME_DIST);
select  CURRENT from (values(0)) q(CURRENT);
select  CURRENT_DATE from (values(0)) q(CURRENT_DATE);
select  CURRENT_DEFAULT_TRANSFORM_GROUP from (values(0)) q(CURRENT_DEFAULT_TRANSFORM_GROUP);
select  CURRENT_PATH from (values(0)) q(CURRENT_PATH);
select  CURRENT_ROLE from (values(0)) q(CURRENT_ROLE);
select  CURRENT_TIME from (values(0)) q(CURRENT_TIME);
select  CURRENT_TIMESTAMP from (values(0)) q(CURRENT_TIMESTAMP);
select  CURRENT_TRANSFORM_GROUP_FOR_TYPE from (values(0)) q(CURRENT_TRANSFORM_GROUP_FOR_TYPE);
select  CURRENT_USER from (values(0)) q(CURRENT_USER);
select  CURSOR from (values(0)) q(CURSOR);
select  CURSOR_NAME from (values(0)) q(CURSOR_NAME);
select  CYCLE from (values(0)) q(CYCLE);
select  DATA from (values(0)) q(DATA);
select  DATABASE from (values(0)) q(DATABASE);
select  DATABASES from (values(0)) q(DATABASES);
select  DATE from (values(0)) q(DATE);
select  DATETIME from (values(0)) q(DATETIME);
select  DATETIME_INTERVAL_CODE from (values(0)) q(DATETIME_INTERVAL_CODE);
select  DATETIME_INTERVAL_PRECISION from (values(0)) q(DATETIME_INTERVAL_PRECISION);
select  DAY from (values(0)) q(DAY);
select  DAY_HOUR from (values(0)) q(DAY_HOUR);
select  DAY_MICROSECOND from (values(0)) q(DAY_MICROSECOND);
select  DAY_MINUTE from (values(0)) q(DAY_MINUTE);
select  DAY_SECOND from (values(0)) q(DAY_SECOND);
select  DAYOFMONTH from (values(0)) q(DAYOFMONTH);
select  DAYOFWEEK from (values(0)) q(DAYOFWEEK);
select  DAYOFYEAR from (values(0)) q(DAYOFYEAR);
select  DBCC from (values(0)) q(DBCC);
select  DEALLOCATE from (values(0)) q(DEALLOCATE);
select  DEC from (values(0)) q(DEC);
select  DECIMAL from (values(0)) q(DECIMAL);
select  DECLARE from (values(0)) q(DECLARE);
select  DEFAULT from (values(0)) q(DEFAULT);
select  DEFAULTS from (values(0)) q(DEFAULTS);
select  DEFERRABLE from (values(0)) q(DEFERRABLE);
select  DEFERRED from (values(0)) q(DEFERRED);
select  DEFINED from (values(0)) q(DEFINED);
select  DEFINER from (values(0)) q(DEFINER);
select  DEGREE from (values(0)) q(DEGREE);
select  DELAY_KEY_WRITE from (values(0)) q(DELAY_KEY_WRITE);
select  DELAYED from (values(0)) q(DELAYED);
select  DELETE from (values(0)) q(DELETE);
select  DELIMITER from (values(0)) q(DELIMITER);
select  DELIMITERS from (values(0)) q(DELIMITERS);
select  DENSE_RANK from (values(0)) q(DENSE_RANK);
select  DENY from (values(0)) q(DENY);
select  DEPTH from (values(0)) q(DEPTH);
select  DEREF from (values(0)) q(DEREF);
select  DERIVED from (values(0)) q(DERIVED);
select  DESC from (values(0)) q(DESC);
select  DESCRIBE from (values(0)) q(DESCRIBE);
select  DESCRIPTOR from (values(0)) q(DESCRIPTOR);
select  DESTROY from (values(0)) q(DESTROY);
select  DESTRUCTOR from (values(0)) q(DESTRUCTOR);
select  DETERMINISTIC from (values(0)) q(DETERMINISTIC);
select  DIAGNOSTICS from (values(0)) q(DIAGNOSTICS);
select  DICTIONARY from (values(0)) q(DICTIONARY);
select  DISABLE from (values(0)) q(DISABLE);
select  DISCONNECT from (values(0)) q(DISCONNECT);
select  DISK from (values(0)) q(DISK);
select  DISPATCH from (values(0)) q(DISPATCH);
select  DISTINCT from (values(0)) q(DISTINCT);
select  DISTINCTROW from (values(0)) q(DISTINCTROW);
select  DISTRIBUTED from (values(0)) q(DISTRIBUTED);
select  DIV from (values(0)) q(DIV);
select  DO from (values(0)) q(DO);
select  DOMAIN from (values(0)) q(DOMAIN);
select  DOUBLE from (values(0)) q(DOUBLE);
select  DROP from (values(0)) q(DROP);
select  DUAL from (values(0)) q(DUAL);
select  DUMMY from (values(0)) q(DUMMY);
select  DUMP from (values(0)) q(DUMP);
select  DYNAMIC from (values(0)) q(DYNAMIC);
select  DYNAMIC_FUNCTION from (values(0)) q(DYNAMIC_FUNCTION);
select  DYNAMIC_FUNCTION_CODE from (values(0)) q(DYNAMIC_FUNCTION_CODE);
select  EACH from (values(0)) q(EACH);
select  ELEMENT from (values(0)) q(ELEMENT);
select  ELSE from (values(0)) q(ELSE);
select  ELSEIF from (values(0)) q(ELSEIF);
select  ENABLE from (values(0)) q(ENABLE);
select  ENCLOSED from (values(0)) q(ENCLOSED);
select  ENCODING from (values(0)) q(ENCODING);
select  ENCRYPTED from (values(0)) q(ENCRYPTED);
select  END from (values(0)) q(END);
select END- EXEC from (values(0)) q(EXEC);
select  ENUM from (values(0)) q(ENUM);
select  EQUALS from (values(0)) q(EQUALS);
select  ERRLVL from (values(0)) q(ERRLVL);
select  ESCAPE from (values(0)) q(ESCAPE);
select  ESCAPED from (values(0)) q(ESCAPED);
select  EVERY from (values(0)) q(EVERY);
select  EXCEPT from (values(0)) q(EXCEPT);
select  EXCEPTION from (values(0)) q(EXCEPTION);
select  EXCLUDE from (values(0)) q(EXCLUDE);
select  EXCLUDING from (values(0)) q(EXCLUDING);
select  EXCLUSIVE from (values(0)) q(EXCLUSIVE);
select  EXEC from (values(0)) q(EXEC);
select  EXECUTE from (values(0)) q(EXECUTE);
select  EXISTING from (values(0)) q(EXISTING);
select  EXISTS from (values(0)) q(EXISTS);
select  EXIT from (values(0)) q(EXIT);
select  EXP from (values(0)) q(EXP);
select  EXPLAIN from (values(0)) q(EXPLAIN);
select  EXTERNAL from (values(0)) q(EXTERNAL);
select  EXTRACT from (values(0)) q(EXTRACT);
select  FALSE from (values(0)) q(FALSE);
select  FETCH from (values(0)) q(FETCH);
select  FIELDS from (values(0)) q(FIELDS);
select  FILE from (values(0)) q(FILE);
select  FILLFACTOR from (values(0)) q(FILLFACTOR);
select  FILTER from (values(0)) q(FILTER);
select  FINAL from (values(0)) q(FINAL);
select  FIRST from (values(0)) q(FIRST);
select  FLOAT from (values(0)) q(FLOAT);
select  FLOAT4 from (values(0)) q(FLOAT4);
select  FLOAT8 from (values(0)) q(FLOAT8);
select  FLOOR from (values(0)) q(FLOOR);
select  FLUSH from (values(0)) q(FLUSH);
select  FOLLOWING from (values(0)) q(FOLLOWING);
select  FOR from (values(0)) q(FOR);
select  FORCE from (values(0)) q(FORCE);
select  FOREIGN from (values(0)) q(FOREIGN);
select  FORTRAN from (values(0)) q(FORTRAN);
select  FORWARD from (values(0)) q(FORWARD);
select  FOUND from (values(0)) q(FOUND);
select  FREE from (values(0)) q(FREE);
select  FREETEXT from (values(0)) q(FREETEXT);
select  FREETEXTTABLE from (values(0)) q(FREETEXTTABLE);
select  FREEZE from (values(0)) q(FREEZE);
select  FROM from (values(0)) q(FROM);
select  FULL from (values(0)) q(FULL);
select  FULLTEXT from (values(0)) q(FULLTEXT);
select  FUNCTION from (values(0)) q(FUNCTION);
select  FUSION from (values(0)) q(FUSION);
select  G from (values(0)) q(G);
select  GENERAL from (values(0)) q(GENERAL);
select  GENERATED from (values(0)) q(GENERATED);
select  GET from (values(0)) q(GET);
select  GLOBAL from (values(0)) q(GLOBAL);
select  GO from (values(0)) q(GO);
select  GOTO from (values(0)) q(GOTO);
select  GRANT from (values(0)) q(GRANT);
select  GRANTED from (values(0)) q(GRANTED);
select  GRANTS from (values(0)) q(GRANTS);
select  GREATEST from (values(0)) q(GREATEST);
select  GROUP from (values(0)) q(GROUP);
select  GROUPING from (values(0)) q(GROUPING);
select  HANDLER from (values(0)) q(HANDLER);
select  HAVING from (values(0)) q(HAVING);
select  HEADER from (values(0)) q(HEADER);
select  HEAP from (values(0)) q(HEAP);
select  HIERARCHY from (values(0)) q(HIERARCHY);
select  HIGH_PRIORITY from (values(0)) q(HIGH_PRIORITY);
select  HOLD from (values(0)) q(HOLD);
select  HOLDLOCK from (values(0)) q(HOLDLOCK);
select  HOST from (values(0)) q(HOST);
select  HOSTS from (values(0)) q(HOSTS);
select  HOUR from (values(0)) q(HOUR);
select  HOUR_MICROSECOND from (values(0)) q(HOUR_MICROSECOND);
select  HOUR_MINUTE from (values(0)) q(HOUR_MINUTE);
select  HOUR_SECOND from (values(0)) q(HOUR_SECOND);
select  IDENTIFIED from (values(0)) q(IDENTIFIED);
select  IDENTITY from (values(0)) q(IDENTITY);
select  IDENTITY_INSERT from (values(0)) q(IDENTITY_INSERT);
select  IDENTITYCOL from (values(0)) q(IDENTITYCOL);
select  IF from (values(0)) q(IF);
select  IGNORE from (values(0)) q(IGNORE);
select  ILIKE from (values(0)) q(ILIKE);
select  IMMEDIATE from (values(0)) q(IMMEDIATE);
select  IMMUTABLE from (values(0)) q(IMMUTABLE);
select  IMPLEMENTATION from (values(0)) q(IMPLEMENTATION);
select  IMPLICIT from (values(0)) q(IMPLICIT);
select  IN from (values(0)) q(IN);
select  INCLUDE from (values(0)) q(INCLUDE);
select  INCLUDING from (values(0)) q(INCLUDING);
select  INCREMENT from (values(0)) q(INCREMENT);
select  INDEX from (values(0)) q(INDEX);
select  INDICATOR from (values(0)) q(INDICATOR);
select  INFILE from (values(0)) q(INFILE);
select  INFIX from (values(0)) q(INFIX);
select  INHERIT from (values(0)) q(INHERIT);
select  INHERITS from (values(0)) q(INHERITS);
select  INITIAL from (values(0)) q(INITIAL);
select  INITIALIZE from (values(0)) q(INITIALIZE);
select  INITIALLY from (values(0)) q(INITIALLY);
select  INNER from (values(0)) q(INNER);
select  INOUT from (values(0)) q(INOUT);
select  INPUT from (values(0)) q(INPUT);
select  INSENSITIVE from (values(0)) q(INSENSITIVE);
select  INSERT from (values(0)) q(INSERT);
select  INSERT_ID from (values(0)) q(INSERT_ID);
select  INSTANCE from (values(0)) q(INSTANCE);
select  INSTANTIABLE from (values(0)) q(INSTANTIABLE);
select  INSTEAD from (values(0)) q(INSTEAD);
select  INT from (values(0)) q(INT);
select  INT1 from (values(0)) q(INT1);
select  INT2 from (values(0)) q(INT2);
select  INT3 from (values(0)) q(INT3);
select  INT4 from (values(0)) q(INT4);
select  INT8 from (values(0)) q(INT8);
select  INTEGER from (values(0)) q(INTEGER);
select  INTERSECT from (values(0)) q(INTERSECT);
select  INTERSECTION from (values(0)) q(INTERSECTION);
select  INTERVAL from (values(0)) q(INTERVAL);
select  INTO from (values(0)) q(INTO);
select  INVOKER from (values(0)) q(INVOKER);
select  IS from (values(0)) q(IS);
select  ISAM from (values(0)) q(ISAM);
select  ISNULL from (values(0)) q(ISNULL);
select  ISOLATION from (values(0)) q(ISOLATION);
select  ITERATE from (values(0)) q(ITERATE);
select  JOIN from (values(0)) q(JOIN);
select  K from (values(0)) q(K);
select  KEY from (values(0)) q(KEY);
select  KEY_MEMBER from (values(0)) q(KEY_MEMBER);
select  KEY_TYPE from (values(0)) q(KEY_TYPE);
select  KEYS from (values(0)) q(KEYS);
select  KILL from (values(0)) q(KILL);
select  LANCOMPILER from (values(0)) q(LANCOMPILER);
select  LANGUAGE from (values(0)) q(LANGUAGE);
select  LARGE from (values(0)) q(LARGE);
select  LAST from (values(0)) q(LAST);
select  LAST_INSERT_ID from (values(0)) q(LAST_INSERT_ID);
select  LATERAL from (values(0)) q(LATERAL);
select  LEAD from (values(0)) q(LEAD);
select  LEADING from (values(0)) q(LEADING);
select  LEAST from (values(0)) q(LEAST);
select  LEAVE from (values(0)) q(LEAVE);
select  LEFT from (values(0)) q(LEFT);
select  LENGTH from (values(0)) q(LENGTH);
select  LESS from (values(0)) q(LESS);
select  LEVEL from (values(0)) q(LEVEL);
select  LIKE from (values(0)) q(LIKE);
select  LIMIT from (values(0)) q(LIMIT);
select  LINENO from (values(0)) q(LINENO);
select  LINES from (values(0)) q(LINES);
select  LISTEN from (values(0)) q(LISTEN);
select  LN from (values(0)) q(LN);
select  LOAD from (values(0)) q(LOAD);
select  LOCAL from (values(0)) q(LOCAL);
select  LOCALTIME from (values(0)) q(LOCALTIME);
select  LOCALTIMESTAMP from (values(0)) q(LOCALTIMESTAMP);
select  LOCATION from (values(0)) q(LOCATION);
select  LOCATOR from (values(0)) q(LOCATOR);
select  LOCK from (values(0)) q(LOCK);
select  LOGIN from (values(0)) q(LOGIN);
select  LOGS from (values(0)) q(LOGS);
select  LONG from (values(0)) q(LONG);
select  LONGBLOB from (values(0)) q(LONGBLOB);
select  LONGTEXT from (values(0)) q(LONGTEXT);
select  LOOP from (values(0)) q(LOOP);
select  LOW_PRIORITY from (values(0)) q(LOW_PRIORITY);
select  LOWER from (values(0)) q(LOWER);
select  M from (values(0)) q(M);
select  MAP from (values(0)) q(MAP);
select  MATCH from (values(0)) q(MATCH);
select  MATCHED from (values(0)) q(MATCHED);
select  MAX from (values(0)) q(MAX);
select  MAX_ROWS from (values(0)) q(MAX_ROWS);
select  MAXEXTENTS from (values(0)) q(MAXEXTENTS);
select  MAXVALUE from (values(0)) q(MAXVALUE);
select  MEDIUMBLOB from (values(0)) q(MEDIUMBLOB);
select  MEDIUMINT from (values(0)) q(MEDIUMINT);
select  MEDIUMTEXT from (values(0)) q(MEDIUMTEXT);
select  MEMBER from (values(0)) q(MEMBER);
select  MERGE from (values(0)) q(MERGE);
select  MESSAGE_LENGTH from (values(0)) q(MESSAGE_LENGTH);
select  MESSAGE_OCTET_LENGTH from (values(0)) q(MESSAGE_OCTET_LENGTH);
select  MESSAGE_TEXT from (values(0)) q(MESSAGE_TEXT);
select  METHOD from (values(0)) q(METHOD);
select  MIDDLEINT from (values(0)) q(MIDDLEINT);
select  MIN from (values(0)) q(MIN);
select  MIN_ROWS from (values(0)) q(MIN_ROWS);
select  MINUS from (values(0)) q(MINUS);
select  MINUTE from (values(0)) q(MINUTE);
select  MINUTE_MICROSECOND from (values(0)) q(MINUTE_MICROSECOND);
select  MINUTE_SECOND from (values(0)) q(MINUTE_SECOND);
select  MINVALUE from (values(0)) q(MINVALUE);
select  MLSLABEL from (values(0)) q(MLSLABEL);
select  MOD from (values(0)) q(MOD);
select  MODE from (values(0)) q(MODE);
select  MODIFIES from (values(0)) q(MODIFIES);
select  MODIFY from (values(0)) q(MODIFY);
select  MODULE from (values(0)) q(MODULE);
select  MONTH from (values(0)) q(MONTH);
select  MONTHNAME from (values(0)) q(MONTHNAME);
select  MORE from (values(0)) q(MORE);
select  MOVE from (values(0)) q(MOVE);
select  MULTISET from (values(0)) q(MULTISET);
select  MUMPS from (values(0)) q(MUMPS);
select  MYISAM from (values(0)) q(MYISAM);
select  NAME from (values(0)) q(NAME);
select  NAMES from (values(0)) q(NAMES);
select  NATIONAL from (values(0)) q(NATIONAL);
select  NATURAL from (values(0)) q(NATURAL);
select  NCHAR from (values(0)) q(NCHAR);
select  NCLOB from (values(0)) q(NCLOB);
select  NESTING from (values(0)) q(NESTING);
select  NEW from (values(0)) q(NEW);
select  NEXT from (values(0)) q(NEXT);
select  NO from (values(0)) q(NO);
select  NO_WRITE_TO_BINLOG from (values(0)) q(NO_WRITE_TO_BINLOG);
select  NOAUDIT from (values(0)) q(NOAUDIT);
select  NOCHECK from (values(0)) q(NOCHECK);
select  NOCOMPRESS from (values(0)) q(NOCOMPRESS);
select  NOCREATEDB from (values(0)) q(NOCREATEDB);
select  NOCREATEROLE from (values(0)) q(NOCREATEROLE);
select  NOCREATEUSER from (values(0)) q(NOCREATEUSER);
select  NOINHERIT from (values(0)) q(NOINHERIT);
select  NOLOGIN from (values(0)) q(NOLOGIN);
select  NONCLUSTERED from (values(0)) q(NONCLUSTERED);
select  NONE from (values(0)) q(NONE);
select  NORMALIZE from (values(0)) q(NORMALIZE);
select  NORMALIZED from (values(0)) q(NORMALIZED);
select  NOSUPERUSER from (values(0)) q(NOSUPERUSER);
select  NOT from (values(0)) q(NOT);
select  NOTHING from (values(0)) q(NOTHING);
select  NOTIFY from (values(0)) q(NOTIFY);
select  NOTNULL from (values(0)) q(NOTNULL);
select  NOWAIT from (values(0)) q(NOWAIT);
select  NULL from (values(0)) q(NULL);
select  NULLABLE from (values(0)) q(NULLABLE);
select  NULLIF from (values(0)) q(NULLIF);
select  NULLS from (values(0)) q(NULLS);
select  NUMBER from (values(0)) q(NUMBER);
select  NUMERIC from (values(0)) q(NUMERIC);
select  OBJECT from (values(0)) q(OBJECT);
select  OCTET_LENGTH from (values(0)) q(OCTET_LENGTH);
select  OCTETS from (values(0)) q(OCTETS);
select  OF from (values(0)) q(OF);
select  OFF from (values(0)) q(OFF);
select  OFFLINE from (values(0)) q(OFFLINE);
select  OFFSET from (values(0)) q(OFFSET);
select  OFFSETS from (values(0)) q(OFFSETS);
select  OIDS from (values(0)) q(OIDS);
select  OLD from (values(0)) q(OLD);
select  ON from (values(0)) q(ON);
select  ONLINE from (values(0)) q(ONLINE);
select  ONLY from (values(0)) q(ONLY);
select  OPEN from (values(0)) q(OPEN);
select  OPENDATASOURCE from (values(0)) q(OPENDATASOURCE);
select  OPENQUERY from (values(0)) q(OPENQUERY);
select  OPENROWSET from (values(0)) q(OPENROWSET);
select  OPENXML from (values(0)) q(OPENXML);
select  OPERATION from (values(0)) q(OPERATION);
select  OPERATOR from (values(0)) q(OPERATOR);
select  OPTIMIZE from (values(0)) q(OPTIMIZE);
select  OPTION from (values(0)) q(OPTION);
select  OPTIONALLY from (values(0)) q(OPTIONALLY);
select  OPTIONS from (values(0)) q(OPTIONS);
select  OR from (values(0)) q(OR);
select  ORDER from (values(0)) q(ORDER);
select  ORDERING from (values(0)) q(ORDERING);
select  ORDINALITY from (values(0)) q(ORDINALITY);
select  OTHERS from (values(0)) q(OTHERS);
select  OUT from (values(0)) q(OUT);
select  OUTER from (values(0)) q(OUTER);
select  OUTFILE from (values(0)) q(OUTFILE);
select  OUTPUT from (values(0)) q(OUTPUT);
select  OVER from (values(0)) q(OVER);
select  OVERLAPS from (values(0)) q(OVERLAPS);
select  OVERLAY from (values(0)) q(OVERLAY);
select  OVERRIDING from (values(0)) q(OVERRIDING);
select  OWNER from (values(0)) q(OWNER);
select  PACK_KEYS from (values(0)) q(PACK_KEYS);
select  PAD from (values(0)) q(PAD);
select  PARAMETER from (values(0)) q(PARAMETER);
select  PARAMETER_MODE from (values(0)) q(PARAMETER_MODE);
select  PARAMETER_NAME from (values(0)) q(PARAMETER_NAME);
select  PARAMETER_ORDINAL_POSITION from (values(0)) q(PARAMETER_ORDINAL_POSITION);
select  PARAMETER_SPECIFIC_CATALOG from (values(0)) q(PARAMETER_SPECIFIC_CATALOG);
select  PARAMETER_SPECIFIC_NAME from (values(0)) q(PARAMETER_SPECIFIC_NAME);
select  PARAMETER_SPECIFIC_SCHEMA from (values(0)) q(PARAMETER_SPECIFIC_SCHEMA);
select  PARAMETERS from (values(0)) q(PARAMETERS);
select  PARTIAL from (values(0)) q(PARTIAL);
select  PARTITION from (values(0)) q(PARTITION);
select  PASCAL from (values(0)) q(PASCAL);
select  PASSWORD from (values(0)) q(PASSWORD);
select  PATH from (values(0)) q(PATH);
select  PCTFREE from (values(0)) q(PCTFREE);
select  PERCENT from (values(0)) q(PERCENT);
select  PERCENT_RANK from (values(0)) q(PERCENT_RANK);
select  PERCENTILE_CONT from (values(0)) q(PERCENTILE_CONT);
select  PERCENTILE_DISC from (values(0)) q(PERCENTILE_DISC);
select  PLACING from (values(0)) q(PLACING);
select  PLAN from (values(0)) q(PLAN);
select  PLI from (values(0)) q(PLI);
select  POSITION from (values(0)) q(POSITION);
select  POSTFIX from (values(0)) q(POSTFIX);
select  POWER from (values(0)) q(POWER);
select  PRECEDING from (values(0)) q(PRECEDING);
select  PRECISION from (values(0)) q(PRECISION);
select  PREFIX from (values(0)) q(PREFIX);
select  PREORDER from (values(0)) q(PREORDER);
select  PREPARE from (values(0)) q(PREPARE);
select  PREPARED from (values(0)) q(PREPARED);
select  PRESERVE from (values(0)) q(PRESERVE);
select  PRIMARY from (values(0)) q(PRIMARY);
select  PRINT from (values(0)) q(PRINT);
select  PRIOR from (values(0)) q(PRIOR);
select  PRIVILEGES from (values(0)) q(PRIVILEGES);
select  PROC from (values(0)) q(PROC);
select  PROCEDURAL from (values(0)) q(PROCEDURAL);
select  PROCEDURE from (values(0)) q(PROCEDURE);
select  PROCESS from (values(0)) q(PROCESS);
select  PROCESSLIST from (values(0)) q(PROCESSLIST);
select  PUBLIC from (values(0)) q(PUBLIC);
select  PURGE from (values(0)) q(PURGE);
select  QUOTE from (values(0)) q(QUOTE);
select  RAID0 from (values(0)) q(RAID0);
select  RAISERROR from (values(0)) q(RAISERROR);
select  RANGE from (values(0)) q(RANGE);
select  RANK from (values(0)) q(RANK);
select  RAW from (values(0)) q(RAW);
select  READ from (values(0)) q(READ);
select  READS from (values(0)) q(READS);
select  READTEXT from (values(0)) q(READTEXT);
select  REAL from (values(0)) q(REAL);
select  RECHECK from (values(0)) q(RECHECK);
select  RECONFIGURE from (values(0)) q(RECONFIGURE);
select  RECURSIVE from (values(0)) q(RECURSIVE);
select  REF from (values(0)) q(REF);
select  REFERENCES from (values(0)) q(REFERENCES);
select  REFERENCING from (values(0)) q(REFERENCING);
select  REGEXP from (values(0)) q(REGEXP);
select  REGR_AVGX from (values(0)) q(REGR_AVGX);
select  REGR_AVGY from (values(0)) q(REGR_AVGY);
select  REGR_COUNT from (values(0)) q(REGR_COUNT);
select  REGR_INTERCEPT from (values(0)) q(REGR_INTERCEPT);
select  REGR_R2 from (values(0)) q(REGR_R2);
select  REGR_SLOPE from (values(0)) q(REGR_SLOPE);
select  REGR_SXX from (values(0)) q(REGR_SXX);
select  REGR_SXY from (values(0)) q(REGR_SXY);
select  REGR_SYY from (values(0)) q(REGR_SYY);
select  REINDEX from (values(0)) q(REINDEX);
select  RELATIVE from (values(0)) q(RELATIVE);
select  RELEASE from (values(0)) q(RELEASE);
select  RELOAD from (values(0)) q(RELOAD);
select  RENAME from (values(0)) q(RENAME);
select  REPEAT from (values(0)) q(REPEAT);
select  REPEATABLE from (values(0)) q(REPEATABLE);
select  REPLACE from (values(0)) q(REPLACE);
select  REPLICATION from (values(0)) q(REPLICATION);
select  REQUIRE from (values(0)) q(REQUIRE);
select  RESET from (values(0)) q(RESET);
select  RESIGNAL from (values(0)) q(RESIGNAL);
select  RESOURCE from (values(0)) q(RESOURCE);
select  RESTART from (values(0)) q(RESTART);
select  RESTORE from (values(0)) q(RESTORE);
select  RESTRICT from (values(0)) q(RESTRICT);
select  RESULT from (values(0)) q(RESULT);
select  RETURN from (values(0)) q(RETURN);
select  RETURNED_CARDINALITY from (values(0)) q(RETURNED_CARDINALITY);
select  RETURNED_LENGTH from (values(0)) q(RETURNED_LENGTH);
select  RETURNED_OCTET_LENGTH from (values(0)) q(RETURNED_OCTET_LENGTH);
select  RETURNED_SQLSTATE from (values(0)) q(RETURNED_SQLSTATE);
select  RETURNS from (values(0)) q(RETURNS);
select  REVOKE from (values(0)) q(REVOKE);
select  RIGHT from (values(0)) q(RIGHT);
select  RLIKE from (values(0)) q(RLIKE);
select  ROLE from (values(0)) q(ROLE);
select  ROLLBACK from (values(0)) q(ROLLBACK);
select  ROLLUP from (values(0)) q(ROLLUP);
select  ROUTINE from (values(0)) q(ROUTINE);
select  ROUTINE_CATALOG from (values(0)) q(ROUTINE_CATALOG);
select  ROUTINE_NAME from (values(0)) q(ROUTINE_NAME);
select  ROUTINE_SCHEMA from (values(0)) q(ROUTINE_SCHEMA);
select  ROW from (values(0)) q(ROW);
select  ROW_COUNT from (values(0)) q(ROW_COUNT);
select  ROW_NUMBER from (values(0)) q(ROW_NUMBER);
select  ROWCOUNT from (values(0)) q(ROWCOUNT);
select  ROWGUIDCOL from (values(0)) q(ROWGUIDCOL);
select  ROWID from (values(0)) q(ROWID);
select  ROWNUM from (values(0),(1)) q(ROWNUM);
select  ROWS from (values(0)) q(ROWS);
select  RULE from (values(0)) q(RULE);
select  SAVE from (values(0)) q(SAVE);
select  SAVEPOINT from (values(0)) q(SAVEPOINT);
select  SCALE from (values(0)) q(SCALE);
select  SCHEMA from (values(0)) q(SCHEMA);
select  SCHEMA_NAME from (values(0)) q(SCHEMA_NAME);
select  SCHEMAS from (values(0)) q(SCHEMAS);
select  SCOPE from (values(0)) q(SCOPE);
select  SCOPE_CATALOG from (values(0)) q(SCOPE_CATALOG);
select  SCOPE_NAME from (values(0)) q(SCOPE_NAME);
select  SCOPE_SCHEMA from (values(0)) q(SCOPE_SCHEMA);
select  SCROLL from (values(0)) q(SCROLL);
select  SEARCH from (values(0)) q(SEARCH);
select  SECOND from (values(0)) q(SECOND);
select  SECOND_MICROSECOND from (values(0)) q(SECOND_MICROSECOND);
select  SECTION from (values(0)) q(SECTION);
select  SECURITY from (values(0)) q(SECURITY);
select  SELECT from (values(0)) q(SELECT);
select  SELF from (values(0)) q(SELF);
select  SENSITIVE from (values(0)) q(SENSITIVE);
select  SEPARATOR from (values(0)) q(SEPARATOR);
select  SEQUENCE from (values(0)) q(SEQUENCE);
select  SERIALIZABLE from (values(0)) q(SERIALIZABLE);
select  SERVER_NAME from (values(0)) q(SERVER_NAME);
select  SESSION from (values(0)) q(SESSION);
select  SESSION_USER from (values(0)) q(SESSION_USER);
select  SET from (values(0)) q(SET);
select  SETOF from (values(0)) q(SETOF);
select  SETS from (values(0)) q(SETS);
select  SETUSER from (values(0)) q(SETUSER);
select  SHARE from (values(0)) q(SHARE);
select  SHOW from (values(0)) q(SHOW);
select  SHUTDOWN from (values(0)) q(SHUTDOWN);
select  SIGNAL from (values(0)) q(SIGNAL);
select  SIMILAR from (values(0)) q(SIMILAR);
select  SIMPLE from (values(0)) q(SIMPLE);
select  SIZE from (values(0)) q(SIZE);
select  SMALLINT from (values(0)) q(SMALLINT);
select  SOME from (values(0)) q(SOME);
select  SONAME from (values(0)) q(SONAME);
select  SOURCE from (values(0)) q(SOURCE);
select  SPACE from (values(0)) q(SPACE);
select  SPATIAL from (values(0)) q(SPATIAL);
select  SPECIFIC from (values(0)) q(SPECIFIC);
select  SPECIFIC_NAME from (values(0)) q(SPECIFIC_NAME);
select  SPECIFICTYPE from (values(0)) q(SPECIFICTYPE);
select  SQL from (values(0)) q(SQL);
select  SQL_BIG_RESULT from (values(0)) q(SQL_BIG_RESULT);
select  SQL_BIG_SELECTS from (values(0)) q(SQL_BIG_SELECTS);
select  SQL_BIG_TABLES from (values(0)) q(SQL_BIG_TABLES);
select  SQL_CALC_FOUND_ROWS from (values(0)) q(SQL_CALC_FOUND_ROWS);
select  SQL_LOG_OFF from (values(0)) q(SQL_LOG_OFF);
select  SQL_LOG_UPDATE from (values(0)) q(SQL_LOG_UPDATE);
select  SQL_LOW_PRIORITY_UPDATES from (values(0)) q(SQL_LOW_PRIORITY_UPDATES);
select  SQL_SELECT_LIMIT from (values(0)) q(SQL_SELECT_LIMIT);
select  SQL_SMALL_RESULT from (values(0)) q(SQL_SMALL_RESULT);
select  SQL_WARNINGS from (values(0)) q(SQL_WARNINGS);
select  SQLCA from (values(0)) q(SQLCA);
select  SQLCODE from (values(0)) q(SQLCODE);
select  SQLERROR from (values(0)) q(SQLERROR);
select  SQLEXCEPTION from (values(0)) q(SQLEXCEPTION);
select  SQLSTATE from (values(0)) q(SQLSTATE);
select  SQLWARNING from (values(0)) q(SQLWARNING);
select  SQRT from (values(0)) q(SQRT);
select  SSL from (values(0)) q(SSL);
select  STABLE from (values(0)) q(STABLE);
select  START from (values(0)) q(START);
select  STARTING from (values(0)) q(STARTING);
select  STATE from (values(0)) q(STATE);
select  STATEMENT from (values(0)) q(STATEMENT);
select  STATIC from (values(0)) q(STATIC);
select  STATISTICS from (values(0)) q(STATISTICS);
select  STATUS from (values(0)) q(STATUS);
select  STDDEV_POP from (values(0)) q(STDDEV_POP);
select  STDDEV_SAMP from (values(0)) q(STDDEV_SAMP);
select  STDIN from (values(0)) q(STDIN);
select  STDOUT from (values(0)) q(STDOUT);
select  STORAGE from (values(0)) q(STORAGE);
select  STRAIGHT_JOIN from (values(0)) q(STRAIGHT_JOIN);
select  STRICT from (values(0)) q(STRICT);
select  STRING from (values(0)) q(STRING);
select  STRUCTURE from (values(0)) q(STRUCTURE);
select  STYLE from (values(0)) q(STYLE);
select  SUBCLASS_ORIGIN from (values(0)) q(SUBCLASS_ORIGIN);
select  SUBLIST from (values(0)) q(SUBLIST);
select  SUBMULTISET from (values(0)) q(SUBMULTISET);
select  SUBSTRING from (values(0)) q(SUBSTRING);
select  SUCCESSFUL from (values(0)) q(SUCCESSFUL);
select  SUM from (values(0)) q(SUM);
select  SUPERUSER from (values(0)) q(SUPERUSER);
select  SYMMETRIC from (values(0)) q(SYMMETRIC);
select  SYNONYM from (values(0)) q(SYNONYM);
select  SYSDATE from (values(0)) q(SYSDATE);
select  SYSID from (values(0)) q(SYSID);
select  SYSTEM from (values(0)) q(SYSTEM);
select  SYSTEM_USER from (values(0)) q(SYSTEM_USER);
select  TABLE from (values(0)) q(TABLE);
select  TABLE_NAME from (values(0)) q(TABLE_NAME);
select  TABLES from (values(0)) q(TABLES);
select  TABLESAMPLE from (values(0)) q(TABLESAMPLE);
select  TABLESPACE from (values(0)) q(TABLESPACE);
select  TEMP from (values(0)) q(TEMP);
select  TEMPLATE from (values(0)) q(TEMPLATE);
select  TEMPORARY from (values(0)) q(TEMPORARY);
select  TERMINATE from (values(0)) q(TERMINATE);
select  TERMINATED from (values(0)) q(TERMINATED);
select  TEXT from (values(0)) q(TEXT);
select  TEXTSIZE from (values(0)) q(TEXTSIZE);
select  THAN from (values(0)) q(THAN);
select  THEN from (values(0)) q(THEN);
select  TIES from (values(0)) q(TIES);
select  TIME from (values(0)) q(TIME);
select  TIMESTAMP from (values(0)) q(TIMESTAMP);
select  TIMEZONE_HOUR from (values(0)) q(TIMEZONE_HOUR);
select  TIMEZONE_MINUTE from (values(0)) q(TIMEZONE_MINUTE);
select  TINYBLOB from (values(0)) q(TINYBLOB);
select  TINYINT from (values(0)) q(TINYINT);
select  TINYTEXT from (values(0)) q(TINYTEXT);
select  TO from (values(0)) q(TO);
select  TOAST from (values(0)) q(TOAST);
select  TOP from (values(0)) q(TOP);
select  TOP_LEVEL_COUNT from (values(0)) q(TOP_LEVEL_COUNT);
select  TRAILING from (values(0)) q(TRAILING);
select  TRAN from (values(0)) q(TRAN);
select  TRANSACTION from (values(0)) q(TRANSACTION);
select  TRANSACTION_ACTIVE from (values(0)) q(TRANSACTION_ACTIVE);
select  TRANSACTIONS_COMMITTED from (values(0)) q(TRANSACTIONS_COMMITTED);
select  TRANSACTIONS_ROLLED_BACK from (values(0)) q(TRANSACTIONS_ROLLED_BACK);
select  TRANSFORM from (values(0)) q(TRANSFORM);
select  TRANSFORMS from (values(0)) q(TRANSFORMS);
select  TRANSLATE from (values(0)) q(TRANSLATE);
select  TRANSLATION from (values(0)) q(TRANSLATION);
select  TREAT from (values(0)) q(TREAT);
select  TRIGGER from (values(0)) q(TRIGGER);
select  TRIGGER_CATALOG from (values(0)) q(TRIGGER_CATALOG);
select  TRIGGER_NAME from (values(0)) q(TRIGGER_NAME);
select  TRIGGER_SCHEMA from (values(0)) q(TRIGGER_SCHEMA);
select  TRIM from (values(0)) q(TRIM);
select  TRUE from (values(0)) q(TRUE);
select  TRUNCATE from (values(0)) q(TRUNCATE);
select  TRUSTED from (values(0)) q(TRUSTED);
select  TSEQUAL from (values(0)) q(TSEQUAL);
select  TYPE from (values(0)) q(TYPE);
select  UESCAPE from (values(0)) q(UESCAPE);
select  UID from (values(0)) q(UID);
select  UNBOUNDED from (values(0)) q(UNBOUNDED);
select  UNCOMMITTED from (values(0)) q(UNCOMMITTED);
select  UNDER from (values(0)) q(UNDER);
select  UNDO from (values(0)) q(UNDO);
select  UNENCRYPTED from (values(0)) q(UNENCRYPTED);
select  UNION from (values(0)) q(UNION);
select  UNIQUE from (values(0)) q(UNIQUE);
select  UNKNOWN from (values(0)) q(UNKNOWN);
select  UNLISTEN from (values(0)) q(UNLISTEN);
select  UNLOCK from (values(0)) q(UNLOCK);
select  UNNAMED from (values(0)) q(UNNAMED);
select  UNNEST from (values(0)) q(UNNEST);
select  UNSIGNED from (values(0)) q(UNSIGNED);
select  UNTIL from (values(0)) q(UNTIL);
select  UPDATE from (values(0)) q(UPDATE);
select  UPDATETEXT from (values(0)) q(UPDATETEXT);
select  UPPER from (values(0)) q(UPPER);
select  USAGE from (values(0)) q(USAGE);
select  USE from (values(0)) q(USE);
select  USER from (values(0)) q(USER);
select  USER_DEFINED_TYPE_CATALOG from (values(0)) q(USER_DEFINED_TYPE_CATALOG);
select  USER_DEFINED_TYPE_CODE from (values(0)) q(USER_DEFINED_TYPE_CODE);
select  USER_DEFINED_TYPE_NAME from (values(0)) q(USER_DEFINED_TYPE_NAME);
select  USER_DEFINED_TYPE_SCHEMA from (values(0)) q(USER_DEFINED_TYPE_SCHEMA);
select  USING from (values(0)) q(USING);
select  UTC_DATE from (values(0)) q(UTC_DATE);
select  UTC_TIME from (values(0)) q(UTC_TIME);
select  UTC_TIMESTAMP from (values(0)) q(UTC_TIMESTAMP);
select  VACUUM from (values(0)) q(VACUUM);
select  VALID from (values(0)) q(VALID);
select  VALIDATE from (values(0)) q(VALIDATE);
select  VALIDATOR from (values(0)) q(VALIDATOR);
select  VALUE from (values(0)) q(VALUE);
select  VALUES from (values(0)) q(VALUES);
select  VAR_POP from (values(0)) q(VAR_POP);
select  VAR_SAMP from (values(0)) q(VAR_SAMP);
select  VARBINARY from (values(0)) q(VARBINARY);
select  VARCHAR from (values(0)) q(VARCHAR);
select  VARCHAR2 from (values(0)) q(VARCHAR2);
select  VARCHARACTER from (values(0)) q(VARCHARACTER);
select  VARIABLE from (values(0)) q(VARIABLE);
select  VARIABLES from (values(0)) q(VARIABLES);
select  VARYING from (values(0)) q(VARYING);
select  VERBOSE from (values(0)) q(VERBOSE);
select  VIEW from (values(0)) q(VIEW);
select  VOLATILE from (values(0)) q(VOLATILE);
select  WAITFOR from (values(0)) q(WAITFOR);
select  WHEN from (values(0)) q(WHEN);
select  WHENEVER from (values(0)) q(WHENEVER);
select  WHERE from (values(0)) q(WHERE);
select  WHILE from (values(0)) q(WHILE);
select  WIDTH_BUCKET from (values(0)) q(WIDTH_BUCKET);
select  WINDOW from (values(0)) q(WINDOW);
select  WITH from (values(0)) q(WITH);
select  WITHIN from (values(0)) q(WITHIN);
select  WITHOUT from (values(0)) q(WITHOUT);
select  WORK from (values(0)) q(WORK);
select  WRITE from (values(0)) q(WRITE);
select  WRITETEXT from (values(0)) q(WRITETEXT);
select  X509 from (values(0)) q(X509);
select  XOR from (values(0)) q(XOR);
select  YEAR from (values(0)) q(YEAR);
select  YEAR_MONTH from (values(0)) q(YEAR_MONTH);
select  ZEROFILL from (values(0)) q(ZEROFILL);
select  ZONE from (values(0)) q(ZONE);
