name: Build and Test
defaults:
  run:
    working-directory: $${env.GITHUB_WORKSPACE}}
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: node:lts-alpine3.12
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:13
        env:
          POSTGRES_USER: drugs
          POSTGRES_PASSWORD: drugs
          POSTGRES_DB: drugs
        # Set health checks to wait until postgres has started
        options: >-
          -v ./src/__tests__/db/create-schema-pg.sql:/docker-entrypoint-initdb.d/01.sql 
          -v ./src/__tests__/db/create-schema-objects.sql:/docker-entrypoint-initdb.d/02.sql
          -v ./src/__tests__/db/create-test-data-pg.sql:/docker-entrypoint-initdb.d/03.sql
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      # Checks-out repo to $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
