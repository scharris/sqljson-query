name: Build and Test
on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ['16.x', '18.x']
    name: Node ${{ matrix.node-version }} / ${{ matrix.db-type }}
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: drugs
          POSTGRES_USER: drugs
          POSTGRES_PASSWORD: drugs
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
          image: mysql:8.0
          env:
            MYSQL_DATABASE: drugs
            MYSQL_USER: drugs
            MYSQL_PASSWORD: drugs
            MYSQL_ROOT_PASSWORD: drugs
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
          ports:
            - 3306:3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout project repository
        uses: actions/checkout@v2
      - name: Initialize PostgreSQL testing database
        run: |
          cd "$GITHUB_WORKSPACE"/src/__tests__/db/pg
          psql "$CONNSTR" -a -q -f sql/create-schema.sql
          psql "$CONNSTR" -a -q -f sql/create-schema-objects.sql
          psql "$CONNSTR" -a -q -f sql/create-test-data.sql
        env:
          CONNSTR: "postgresql://drugs:drugs@localhost:5432/drugs"
      - name: Initialize MySQL testing database
        run: |
          cd "$GITHUB_WORKSPACE"/src/__tests__/db/mysql
          mysql --host=127.0.0.1 --port=3306 --user=drugs --password=drugs --database=drugs < sql/create-schema-objects.sql
          mysql --host=127.0.0.1 --port=3306 --user=drugs --password=drugs --database=drugs < sql/create-test-data.sql
      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install global npm dependencies
        run: npm i -g rimraf mkdirp typescript-json-schema jest
      - name: Install project npm dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Set up JDK 17 for Java tests
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run project tests
        run: npm test
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: drugs
          PGUSER: drugs
          PGPASSWORD: drugs
